#summary short description on how to use jigg

= Introduction =

This page should give you a short overview, some examples and links.

= Overview =

You can read the Basic Concepts of the digg.com API [http://apidoc.digg.com/BasicConcepts here]. In a nutshell, you have to call some URL like `http://services.digg.com/stories...` and you'll get the answer (among other formats) as XML. *Jigg* wraps this nicely and provides methods for all the API endpoints so you don't have to build an URL, parse the response and handle http errors etc.

= Examples =

First of all you have to construct a jigg object. While doing this you have to provide an [http://apidoc.digg.com/ApplicationKeys application key]. This just have to be a valid URL.

{{{
Jigg jigg = new Jigg("http://code.google.com/p/jigg/");
}}}

== Stories ==

List stories from topic _apple_:
{{{
for (Story story : jigg.getStories(new Topic("Apple", "apple"))) {
  System.out.println(story.getTitle());
}
}}}

Get a story by id:
{{{
System.out.println(jigg.getStory(1489));
}}}

List stories by id list:
{{{
for (Story story : jigg.getStories(984,1489,8575,174)) {
  System.out.println(story.getTitle() + "(" + story.getId() + ")");
}
}}}

List popular stories:
{{{
for (Story story : jigg.getPopularStories()) {
  System.out.println(story.getTitle() + "(" + story.getId() + ")");
}
}}}

== Topics ==

List topics:
{{{
for (Topic topic : jigg.getTopics()) {
  System.out.println(topic.getName() + "(" + topic.getShortName() + ")");
}
}}}